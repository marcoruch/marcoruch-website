console.log("Consent manager script loaded");class ConsentManager{constructor(){console.log("ConsentManager constructor called"),this.consentKey="mr_consent_preferences",this.consentVersion="1.0",this.consentData=this.loadConsent(),this.firebase=null,this.analytics=null,console.log("About to call init()"),this.init(),console.log("ConsentManager constructor completed")}init(){console.log("Init method called");try{this.createConsentBanner(),console.log("Consent banner created"),this.createConsentModal(),console.log("Consent modal created"),this.createPrivacyIndicator(),console.log("Privacy indicator created"),this.checkConsentStatus(),console.log("Consent status checked"),this.bindEvents(),console.log("Events bound")}catch(e){console.error("Error in init method:",e)}}loadConsent(){try{const e=localStorage.getItem(this.consentKey);if(e){const n=JSON.parse(e);if(n.version===this.consentVersion)return n}}catch(e){console.log("No previous consent found")}return{version:this.consentVersion,timestamp:null,analytics:!1,marketing:!1,functional:!0,necessary:!0}}saveConsent(){this.consentData.timestamp=(new Date).toISOString(),localStorage.setItem(this.consentKey,JSON.stringify(this.consentData)),this.applyConsent()}applyConsent(){this.consentData.analytics?this.initFirebaseAnalytics():this.disableAnalytics(),this.hideConsentBanner(),this.showPrivacyIndicator()}async initFirebaseAnalytics(){if(!this.analytics)try{const{initializeApp:e}=await import("https://www.gstatic.com/firebasejs/12.1.0/firebase-app.js"),{getAnalytics:n,setConsent:t}=await import("https://www.gstatic.com/firebasejs/12.1.0/firebase-analytics.js"),s={apiKey:"AIzaSyC69Bs5AxRbOEVQf8cvzA5G5j7P7YEHs9U",authDomain:"marcoruch-website.firebaseapp.com",projectId:"marcoruch-website",storageBucket:"marcoruch-website.firebasestorage.app",messagingSenderId:"240785440759",appId:"1:240785440759:web:862aa9237bcdd2f7c238f2",measurementId:"G-7QH375J4SR"};this.firebase=e(s),this.analytics=n(this.firebase),t({analytics_storage:this.consentData.analytics?"granted":"denied",ad_storage:this.consentData.marketing?"granted":"denied",functionality_storage:"granted",security_storage:"granted"}),console.log("Firebase Analytics initialized with consent")}catch(e){console.error("Failed to initialize Firebase Analytics:",e)}}disableAnalytics(){if(this.analytics){const{setConsent:e}=import("https://www.gstatic.com/firebasejs/12.1.0/firebase-analytics.js").then((e=>{e.setConsent({analytics_storage:"denied",ad_storage:"denied"})}))}this.clearAnalyticsCookies()}clearAnalyticsCookies(){["_ga","_ga_G-7QH375J4SR","_gid","_gat"].forEach((e=>{document.cookie=`${e}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`,document.cookie=`${e}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=.marcoruch.ch;`}))}createConsentBanner(){const e=document.createElement("div");e.className="consent-banner",e.id="consent-banner",e.innerHTML='\n            <div class="consent-content">\n                <div class="consent-text">\n                    <h4>üç™ Your Privacy Matters</h4>\n                    <p>I use cookies and analytics to improve your experience and understand how you interact with my portfolio. <a title="Read our privacy policy" href="privacy.html" class="consent-link" target="_blank" aria-label="Read our privacy policy">Read our privacy policy</a> or choose which cookies to accept.</p>\n                </div>\n                <div class="consent-actions">\n                    <button class="consent-btn consent-btn-accept" id="consent-accept">Accept All</button>\n                    <button class="consent-btn consent-btn-decline" id="consent-decline">Decline All</button>\n                    <button class="consent-btn consent-btn-settings" id="consent-settings">Settings</button>\n                </div>\n            </div>\n        ',document.body.appendChild(e)}createConsentModal(){const e=document.createElement("div");e.className="consent-modal",e.id="consent-modal",e.innerHTML='\n            <div class="consent-modal-content">\n                <div class="consent-modal-header">\n                    <h3 class="consent-modal-title">Privacy Settings</h3>\n                    <button class="consent-modal-close" id="consent-modal-close">&times;</button>\n                </div>\n                \n                <div class="consent-category">\n                    <div class="consent-category-header">\n                        <h4 class="consent-category-title">Necessary Cookies</h4>\n                        <label class="consent-toggle">\n                            <input type="checkbox" checked disabled>\n                            <span class="consent-slider"></span>\n                        </label>\n                    </div>\n                    <p class="consent-category-description">\n                        Essential cookies required for basic website functionality, navigation, and security. These cannot be disabled.\n                    </p>\n                </div>\n\n                <div class="consent-category">\n                    <div class="consent-category-header">\n                        <h4 class="consent-category-title">Functional Cookies</h4>\n                        <label class="consent-toggle">\n                            <input type="checkbox" id="functional-toggle" checked disabled>\n                            <span class="consent-slider"></span>\n                        </label>\n                    </div>\n                    <p class="consent-category-description">\n                        Enable enhanced functionality like remembering your preferences and settings.\n                    </p>\n                </div>\n\n                <div class="consent-category">\n                    <div class="consent-category-header">\n                        <h4 class="consent-category-title">Analytics Cookies</h4>\n                        <label class="consent-toggle">\n                            <input type="checkbox" id="analytics-toggle">\n                            <span class="consent-slider"></span>\n                        </label>\n                    </div>\n                    <p class="consent-category-description">\n                        Help me understand how visitors interact with my portfolio through Google Analytics. This data is anonymized and helps improve the user experience.\n                    </p>\n                </div>\n\n                <div class="consent-category">\n                    <div class="consent-category-header">\n                        <h4 class="consent-category-title">Marketing Cookies</h4>\n                        <label class="consent-toggle">\n                            <input type="checkbox" id="marketing-toggle">\n                            <span class="consent-slider"></span>\n                        </label>\n                    </div>\n                    <p class="consent-category-description">\n                        Track visits across websites to provide relevant content and advertising. Currently not used but reserved for future features.\n                    </p>\n                </div>\n\n                <div class="consent-modal-actions">\n                    <button class="consent-btn consent-btn-decline" id="modal-decline">Decline All</button>\n                    <button class="consent-btn consent-btn-accept" id="modal-save">Save Preferences</button>\n                </div>\n            </div>\n        ',document.body.appendChild(e)}createPrivacyIndicator(){const e=document.createElement("div");e.className="privacy-indicator",e.id="privacy-indicator",e.title="Privacy Settings",e.innerHTML='\n            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>\n            </svg>\n        ',document.body.appendChild(e)}bindEvents(){document.getElementById("consent-accept")?.addEventListener("click",(()=>this.acceptAll())),document.getElementById("consent-decline")?.addEventListener("click",(()=>this.declineAll())),document.getElementById("consent-settings")?.addEventListener("click",(()=>this.showSettings())),document.getElementById("consent-modal-close")?.addEventListener("click",(()=>this.hideSettings())),document.getElementById("modal-decline")?.addEventListener("click",(()=>this.declineAll())),document.getElementById("modal-save")?.addEventListener("click",(()=>this.savePreferences())),document.getElementById("privacy-indicator")?.addEventListener("click",(()=>this.showSettings())),document.getElementById("consent-modal")?.addEventListener("click",(e=>{"consent-modal"===e.target.id&&this.hideSettings()}));document.addEventListener("keydown",(e=>{if("Escape"===e.key){console.log("Escape key pressed");const e=document.getElementById("consent-modal");e&&e.classList.contains("show")?(console.log("Consent modal is open, calling hideSettings"),this.hideSettings()):console.log("Consent modal not open or not found")}}))}checkConsentStatus(){this.consentData.timestamp?this.applyConsent():this.showConsentBanner()}showConsentBanner(){const e=document.getElementById("consent-banner");e&&setTimeout((()=>e.classList.add("show")),1e3)}hideConsentBanner(){const e=document.getElementById("consent-banner");e&&(e.classList.remove("show"),e.classList.add("hide"))}showPrivacyIndicator(){const e=document.getElementById("privacy-indicator");e&&setTimeout((()=>e.classList.add("show")),2e3)}showSettings(){const e=document.getElementById("consent-modal"),n=document.getElementById("privacy-indicator");e&&(document.getElementById("analytics-toggle").checked=this.consentData.analytics,document.getElementById("marketing-toggle").checked=this.consentData.marketing,e.classList.add("show"),n&&n.classList.add("active"))}hideSettings(){console.log("hideSettings called");const e=document.getElementById("consent-modal"),n=document.getElementById("privacy-indicator");e?(e.classList.remove("show"),console.log("Modal show class removed"),n?(n.classList.remove("active"),console.log("Privacy indicator active class removed")):console.log("Privacy indicator not found")):console.log("Modal not found")}acceptAll(){this.consentData.analytics=!0,this.consentData.marketing=!0,this.consentData.functional=!0,this.consentData.necessary=!0,this.saveConsent()}declineAll(){this.consentData.analytics=!1,this.consentData.marketing=!1,this.consentData.functional=!0,this.consentData.necessary=!0,this.saveConsent()}savePreferences(){this.consentData.analytics=document.getElementById("analytics-toggle").checked,this.consentData.marketing=document.getElementById("marketing-toggle").checked,this.saveConsent(),this.hideSettings()}getConsent(){return{...this.consentData}}updateConsent(e){Object.assign(this.consentData,e),this.saveConsent()}}function initConsentManager(){console.log("Initializing consent manager...");try{window.consentManager=new ConsentManager,console.log("Consent manager initialized successfully")}catch(e){console.error("Failed to initialize consent manager:",e)}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",initConsentManager):initConsentManager(),window.ConsentManager=ConsentManager;